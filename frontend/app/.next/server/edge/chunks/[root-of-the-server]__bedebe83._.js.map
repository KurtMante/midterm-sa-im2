{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 16, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/lib/auth.ts"],"sourcesContent":["import NextAuth from \"next-auth\"\r\nimport Google from \"next-auth/providers/google\"\r\n \r\nexport const { handlers, signIn, signOut, auth } = NextAuth({\r\n  providers: [Google],\r\n})"],"names":[],"mappings":";;;;;;;;;;AAAA;AACA;AAAA;;;AAEO,MAAM,EAAE,QAAQ,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,GAAG,IAAA,wKAAQ,EAAC;IAC1D,WAAW;QAAC,wKAAM;KAAC;AACrB"}},
    {"offset": {"line": 40, "column": 0}, "map": {"version":3,"sources":["turbopack:///[project]/middleware.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\r\n\r\nimport  { auth } from \"@/lib/auth\"\r\n\r\n\r\nexport async function middleware(request: NextRequest) {\r\n    const session = await auth();\r\n\r\n    const privateRoutes = [\"/homepage\"];\r\n    const publicRoutes = ['/'];\r\n\r\n    if (session?.user && publicRoutes.includes(request.nextUrl.pathname)) {\r\n        return NextResponse.redirect(new URL(\"/homepage\", request.url))\r\n    } else if (!session?.user && privateRoutes.includes(request.nextUrl.pathname)) {\r\n        return NextResponse.redirect(new URL(\"/\", request.url))\r\n    }\r\n\r\n    return NextResponse.next();\r\n\r\n}\r\n\r\nexport const config = {\r\n    matcher: [\"/\", \"/homepage\"]\r\n}"],"names":[],"mappings":";;;;;;AAAA;AAAA;AAEA;;;AAGO,eAAe,WAAW,OAAoB;IACjD,MAAM,UAAU,MAAM,IAAA,2HAAI;IAE1B,MAAM,gBAAgB;QAAC;KAAY;IACnC,MAAM,eAAe;QAAC;KAAI;IAE1B,IAAI,SAAS,QAAQ,aAAa,QAAQ,CAAC,QAAQ,OAAO,CAAC,QAAQ,GAAG;QAClE,OAAO,gMAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,aAAa,QAAQ,GAAG;IACjE,OAAO,IAAI,CAAC,SAAS,QAAQ,cAAc,QAAQ,CAAC,QAAQ,OAAO,CAAC,QAAQ,GAAG;QAC3E,OAAO,gMAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,KAAK,QAAQ,GAAG;IACzD;IAEA,OAAO,gMAAY,CAAC,IAAI;AAE5B;AAEO,MAAM,SAAS;IAClB,SAAS;QAAC;QAAK;KAAY;AAC/B"}}]
}